1
00:00:00,080 --> 00:00:02,800
about to calculate the prefix sum array.

2
00:00:03,120 --> 00:00:05,360
This is a common and a useful technique

3
00:00:05,360 --> 00:00:07,120
in programming for cumulative

4
00:00:07,120 --> 00:00:09,680
calculations. So let's proceed with this

5
00:00:09,680 --> 00:00:12,160
challenge and we will move towards our VS

6
00:00:12,160 --> 00:00:14,880
code. If we see in the VS code, we have

7
00:00:14,880 --> 00:00:17,120
here our question along with the sample

8
00:00:17,120 --> 00:00:19,280
input and output, right?So what is the

9
00:00:19,280 --> 00:00:21,920
question?We have to write a JS function

10
00:00:22,240 --> 00:00:25,200
to calculate the prefix sum array of

11
00:00:25,200 --> 00:00:27,880
a given array, right?And here we have the

12
00:00:27,880 --> 00:00:30,400
input and we have the output as well. OK,

13
00:00:30,720 --> 00:00:32,640
first of all, what we are going to do, we

14
00:00:32,640 --> 00:00:34,760
will come down and we will break down our

15
00:00:34,760 --> 00:00:37,200
question. OK, so I will write here what

16
00:00:37,280 --> 00:00:39,920
JS function. OK, after that, what is the

17
00:00:39,920 --> 00:00:41,760
next important thing in this question?

18
00:00:41,760 --> 00:00:44,600
That we have to calculate the prefix

19
00:00:44,600 --> 00:00:46,960
sum array of a given array, right?So we

20
00:00:46,960 --> 00:00:48,960
will take this line and we will put it

21
00:00:48,960 --> 00:00:51,480
over here. OK, now let us come at line

22
00:00:51,480 --> 00:00:54,320
#7 and we will define our function name.

23
00:00:54,560 --> 00:00:56,560
So what will be our function name?We will

24
00:00:56,560 --> 00:00:58,840
keep our function name as what prefix

25
00:00:58,840 --> 00:01:01,240
sum. OK, that is what we want to

26
00:01:01,240 --> 00:01:03,240
calculate. So we will keep our function

27
00:01:03,240 --> 00:01:04,840
name as what prefix sum with a

28
00:01:04,840 --> 00:01:07,600
parenthesis, OK. Now let us

29
00:01:07,640 --> 00:01:10,080
understand this particular line how we

30
00:01:10,080 --> 00:01:12,160
are going to calculate the prefix sum

31
00:01:12,160 --> 00:01:15,040
array of a given array. OK, so

32
00:01:15,040 --> 00:01:17,240
for that we will go to our input and

33
00:01:17,240 --> 00:01:19,1000
output. OK, so I will take this input

34
00:01:19,1000 --> 00:01:22,760
array down. OK and now let us understand

35
00:01:22,760 --> 00:01:25,520
from this input array how can we reach to

36
00:01:25,520 --> 00:01:28,080
this particular output. OK, so let us

37
00:01:28,080 --> 00:01:30,120
take this here and I will put it over

38
00:01:30,120 --> 00:01:32,440
here. So first one is our input array and

39
00:01:32,440 --> 00:01:34,800
second one is our what output array. OK,

40
00:01:35,200 --> 00:01:37,760
now if you come here, what is?Here 2.

41
00:01:38,080 --> 00:01:40,880
So that is nothing but the first element

42
00:01:40,880 --> 00:01:43,200
of our input array, correct?So I will

43
00:01:43,200 --> 00:01:45,1000
just write here 2. OK, after that what do

44
00:01:45,1000 --> 00:01:48,120
you have?You have 6. Now how can you

45
00:01:48,120 --> 00:01:50,810
reach to six?If you see here 2 +

46
00:01:51,200 --> 00:01:53,1000
4, right?It is saying sum. So let us

47
00:01:53,1000 --> 00:01:56,560
do the sum here. So prefix sum. OK,

48
00:01:56,840 --> 00:01:59,840
prefix means what before, correct?So

49
00:01:59,840 --> 00:02:02,240
that is what we have to do here. So

50
00:02:02,400 --> 00:02:05,360
4 2, if you take, you will get here

51
00:02:05,360 --> 00:02:07,1000
6, right?So that is what we are going to

52
00:02:07,1000 --> 00:02:10,560
do. So I will write here 2 + 4 is nothing

53
00:02:10,560 --> 00:02:13,280
but six. OK. After that, what do we have?

54
00:02:13,360 --> 00:02:15,840
10. So as soon as you go to the next

55
00:02:15,840 --> 00:02:18,810
element, and if you start adding it, 2 +

56
00:02:19,200 --> 00:02:21,1000
4 + 4, it will be nothing but what?

57
00:02:22,560 --> 00:02:25,530
10, right?So I'll write here what?2 + 4 +

58
00:02:25,600 --> 00:02:28,400
4. This is what?8 + 2 is nothing but 10,

59
00:02:28,400 --> 00:02:30,880
right?That is what we are going to get.

60
00:02:31,280 --> 00:02:33,400
After that, what we have?We have 12. So

61
00:02:33,400 --> 00:02:35,040
how will you get it?Add this.

62
00:02:35,440 --> 00:02:38,400
2+4+4+2. So I will write

63
00:02:38,400 --> 00:02:38,960
here what?

64
00:02:39,280 --> 00:02:42,160
2+4+4+2. So

65
00:02:42,160 --> 00:02:44,200
what you will get?You will get 12. So

66
00:02:44,200 --> 00:02:46,560
that is what it is doing. It is adding

67
00:02:46,560 --> 00:02:49,520
the prefix sum. So 2 first time.

68
00:02:49,520 --> 00:02:51,840
After that 2+4, that is where you are

69
00:02:51,840 --> 00:02:54,640
getting 6. After that 2+4+4,

70
00:02:55,040 --> 00:02:57,080
that is giving you 10, and after that

71
00:02:57,080 --> 00:02:59,920
2+4+4+2, and it isgiving you

72
00:02:59,920 --> 00:03:02,800
12. That is how you are reaching to an

73
00:03:02,800 --> 00:03:05,440
output array like this. Now we understood

74
00:03:05,440 --> 00:03:07,600
that how we can reach to this particular

75
00:03:07,600 --> 00:03:09,680
output, right?So for this now we are

76
00:03:09,680 --> 00:03:12,320
going to write our approach. OK, so I

77
00:03:12,320 --> 00:03:14,400
will write here approach. So what is a

78
00:03:14,400 --> 00:03:16,720
prefix sum array?It is nothing but the

79
00:03:16,720 --> 00:03:19,360
array whose every element is the sum of

80
00:03:19,440 --> 00:03:22,240
all the elements of the original array up

81
00:03:22,240 --> 00:03:24,960
to the current index. OK, so if you see

82
00:03:24,960 --> 00:03:27,440
what we were doing, first we took here 2

83
00:03:27,520 --> 00:03:29,720
and that was our output. After thatWhat

84
00:03:29,720 --> 00:03:32,650
we did to get our six, we added here 2 +

85
00:03:32,960 --> 00:03:35,770
4, right?To get 10 what we added then 2 +

86
00:03:36,080 --> 00:03:38,160
4 + 4, right?So if you see we are

87
00:03:38,160 --> 00:03:40,440
traveling from one element to another,

88
00:03:40,440 --> 00:03:43,040
right?And we are maintaining our running

89
00:03:43,040 --> 00:03:45,280
sum here, right?That is what we have

90
00:03:45,280 --> 00:03:47,800
done. So we will come down and for this

91
00:03:47,800 --> 00:03:49,880
question we are going to use a loop

92
00:03:49,880 --> 00:03:52,360
because we are traveling from one element

93
00:03:52,360 --> 00:03:54,800
to another element, right?So I will write

94
00:03:54,800 --> 00:03:56,640
here loop and we are going to take just

95
00:03:56,640 --> 00:03:58,640
one loop. So I will write here what I

96
00:03:58,640 --> 00:04:01,520
loop, OK. Now, after that, whenever we

97
00:04:01,520 --> 00:04:03,800
use a loop, what we have here, we have

98
00:04:03,800 --> 00:04:06,240
our start point and our end point, right?

99
00:04:06,480 --> 00:04:08,680
So where it is going to start, obviously,

100
00:04:08,680 --> 00:04:11,120
it is going to start at our 0th index,

101
00:04:11,120 --> 00:04:13,520
right?So I will write here what?Start

102
00:04:13,520 --> 00:04:16,080
will be our zero, right?But where it is

103
00:04:16,080 --> 00:04:18,320
going to end?It will end at

104
00:04:18,400 --> 00:04:21,360
arr.length-1 because we have to reach to

105
00:04:21,360 --> 00:04:23,840
our last element, right?So I will write

106
00:04:23,840 --> 00:04:26,800
here what?arr.length-1, correct?

107
00:04:27,120 --> 00:04:29,200
Now let us come here and we will write

108
00:04:29,600 --> 00:04:31,840
loop here. So I will write here what for

109
00:04:32,160 --> 00:04:34,800
and then it will be what let i is equal

110
00:04:34,800 --> 00:04:37,680
to 0 and i should be less than

111
00:04:38,320 --> 00:04:40,960
our arr.length, correct?And then we are

112
00:04:40,960 --> 00:04:43,840
going to increment as well, okay?And then

113
00:04:43,880 --> 00:04:45,800
here we are going to write our flower

114
00:04:45,800 --> 00:04:47,880
braces. Now inside this flower braces

115
00:04:47,880 --> 00:04:50,800
what we have to do, we have to calculate

116
00:04:50,800 --> 00:04:53,360
the sum, correct?And then after

117
00:04:53,360 --> 00:04:55,360
calculating the sum it is going to

118
00:04:55,400 --> 00:04:57,120
accumulate somewhere, right?You can see

119
00:04:57,120 --> 00:04:59,120
here accumulation is happening. So we

120
00:04:59,120 --> 00:05:01,120
have toto calculate the sum and we have

121
00:05:01,280 --> 00:05:04,280
to accumulate plus what we have to

122
00:05:04,280 --> 00:05:07,160
do here, we have to push it to our

123
00:05:07,160 --> 00:05:09,640
resultant array, right?So we are going to

124
00:05:09,640 --> 00:05:12,400
write here what push to resultant array,

125
00:05:12,400 --> 00:05:14,400
correct?So that is what I will write

126
00:05:14,400 --> 00:05:17,200
here. We have to calculate the sum

127
00:05:17,520 --> 00:05:19,840
and we have to accumulate the sum,

128
00:05:19,840 --> 00:05:22,360
correct?And then we have to push to our

129
00:05:22,400 --> 00:05:25,040
resultant array, correct?So now for

130
00:05:25,040 --> 00:05:27,720
thisWhat we will do, we will come at the

131
00:05:27,720 --> 00:05:30,480
top and we will declare here 2 variables.

132
00:05:30,480 --> 00:05:33,360
OK, so first variable will be what some

133
00:05:33,360 --> 00:05:35,520
prefix. OK, so I will write here some

134
00:05:35,520 --> 00:05:37,680
prefix and we are going to initialize

135
00:05:37,680 --> 00:05:40,080
with an empty array. Why I'm doing this?

136
00:05:40,080 --> 00:05:42,160
Because this is the place where we will

137
00:05:42,400 --> 00:05:45,200
store our prefix sum. OK, so this will be

138
00:05:45,200 --> 00:05:48,160
used to store the prefix. So I will

139
00:05:48,160 --> 00:05:50,480
write here what store the prefix sum. OK,

140
00:05:50,480 --> 00:05:52,800
after that what we are going to do, we

141
00:05:52,800 --> 00:05:55,120
will declare another variable called as a

142
00:05:55,120 --> 00:05:57,600
sum and we will initialize with zero. OK,

143
00:05:57,840 --> 00:05:59,920
so here this place what it is going to

144
00:05:59,920 --> 00:06:02,160
happen. We are going to calculate the sum

145
00:06:02,160 --> 00:06:04,640
and here we will be accumulating it up.

146
00:06:04,640 --> 00:06:07,200
OK, so I will write here accumulation is

147
00:06:07,200 --> 00:06:10,080
going to happen here. OK. Now let us come

148
00:06:10,080 --> 00:06:12,040
here and we will write the logic for

149
00:06:12,040 --> 00:06:13,720
that. So what we are going to write to

150
00:06:13,760 --> 00:06:15,480
calculate the sum and to do the

151
00:06:15,480 --> 00:06:18,240
accumulation, we will write here what sum

152
00:06:18,400 --> 00:06:21,360
plus is equal to our arr of I,

153
00:06:21,440 --> 00:06:23,760
right. That is what is going to give us

154
00:06:23,960 --> 00:06:26,400
our sum. And after that what we will do,

155
00:06:26,400 --> 00:06:29,120
we will use our push method in this. OK,

156
00:06:29,440 --> 00:06:31,760
so push method will what do it will add

157
00:06:31,760 --> 00:06:34,320
up the elements to our empty array. OK,

158
00:06:34,560 --> 00:06:36,920
So what element we want to add, we want

159
00:06:36,920 --> 00:06:38,960
to add our sum, right. So we will come

160
00:06:38,960 --> 00:06:40,880
here. And we will write here what sum

161
00:06:41,360 --> 00:06:44,120
prefix we are going to write so and

162
00:06:44,720 --> 00:06:47,120
dot push we will write and here we are

163
00:06:47,120 --> 00:06:49,360
going to pass our sum. OK, once

164
00:06:49,360 --> 00:06:51,760
everything is done we are going to print

165
00:06:51,800 --> 00:06:54,640
our what?Final resultant array.

166
00:06:54,640 --> 00:06:57,360
That is nothing but our sum prefix, right?

167
00:06:57,680 --> 00:06:59,600
That is where we are going to get our

168
00:06:59,600 --> 00:07:02,240
exact output. OK, now let us come here

169
00:07:02,240 --> 00:07:04,640
and we will understand our iteration. OK,

170
00:07:04,640 --> 00:07:07,360
so I will write here what iterations. OK

171
00:07:07,680 --> 00:07:10,640
now when I is equal to 0, what we are

172
00:07:10,640 --> 00:07:13,040
going to write our condition 0 is less

173
00:07:13,040 --> 00:07:15,160
than 4. Why 4?Because the length of the

174
00:07:15,160 --> 00:07:17,680
array is 4, right?Then what will happen

175
00:07:17,680 --> 00:07:20,240
once this condition turns out to be true,

176
00:07:20,240 --> 00:07:22,720
it is going to perform this operations.

177
00:07:23,280 --> 00:07:25,600
So is it true?Yes, it is true. So it is

178
00:07:25,600 --> 00:07:27,400
going to perform the operation, right?

179
00:07:27,400 --> 00:07:29,760
What is the operation?Sum plus is equal

180
00:07:29,760 --> 00:07:32,400
to arr of I. So what is this?This is

181
00:07:32,400 --> 00:07:35,120
nothing but sum is equal to sum plus

182
00:07:35,320 --> 00:07:37,760
arr of I, right?That is what we are going

183
00:07:37,760 --> 00:07:39,480
to write here. And let us come here and

184
00:07:39,480 --> 00:07:42,320
let us do that. That is what zero we will

185
00:07:42,320 --> 00:07:44,960
get here plus what is our arr of I?That

186
00:07:44,960 --> 00:07:47,440
is nothing but two. So you will get here

187
00:07:47,440 --> 00:07:50,200
as two. And this is what our sum. So

188
00:07:50,200 --> 00:07:52,560
sum is equal to two. After this, what is

189
00:07:52,560 --> 00:07:54,560
written?In the next slide we have to use

190
00:07:54,680 --> 00:07:57,360
our push method and we have to update our

191
00:07:57,360 --> 00:07:59,840
resultant array, right?So I will write

192
00:07:59,840 --> 00:08:02,160
here our push method and we are going to

193
00:08:02,160 --> 00:08:04,560
push what two. So our resultant array

194
00:08:04,560 --> 00:08:07,120
that is nothing but some prefix will have

195
00:08:07,120 --> 00:08:09,680
inside too. OK, now next

196
00:08:09,720 --> 00:08:11,600
iteration is going to happen. So I will

197
00:08:11,600 --> 00:08:14,480
write here what I is equal to 1 and one

198
00:08:14,480 --> 00:08:16,480
less than four we are going to write here

199
00:08:16,720 --> 00:08:19,360
and this is also true, right?So that is

200
00:08:19,360 --> 00:08:21,760
why now for the calculations will happen.

201
00:08:21,1000 --> 00:08:24,800
So what is it?So sum plus arr of I. Now

202
00:08:24,800 --> 00:08:27,440
sum value has got updated. It is what it

203
00:08:27,440 --> 00:08:30,400
is nothing but two right?And two plus our

204
00:08:30,560 --> 00:08:33,200
arr of I. So we have your what 4 right?

205
00:08:33,360 --> 00:08:35,960
So 2 + 4 we are going to write and that

206
00:08:35,960 --> 00:08:38,280
is what we are going to get 6 and our sum

207
00:08:38,280 --> 00:08:41,240
will be nothing but six. So after this we

208
00:08:41,240 --> 00:08:43,440
are going to use our push method right?So

209
00:08:43,440 --> 00:08:46,240
I will write here what push. And then we

210
00:08:46,240 --> 00:08:48,200
are going to push it to our resultant

211
00:08:48,200 --> 00:08:50,800
array. So we already had two and then we

212
00:08:50,800 --> 00:08:53,320
are going to push our six also inside it.

213
00:08:53,520 --> 00:08:56,160
So if you see we got our two comma six.

214
00:08:56,160 --> 00:08:58,800
OK, now let us go to the next iteration.

215
00:08:59,560 --> 00:09:02,080
So when I is equal to two, so we are

216
00:09:02,080 --> 00:09:04,320
going to write here what 2 is less than

217
00:09:04,320 --> 00:09:07,080
four and this is also true, right?That is

218
00:09:07,080 --> 00:09:09,640
where now calculations will happen. So

219
00:09:09,640 --> 00:09:12,200
our sum value was updated as six. So we

220
00:09:12,200 --> 00:09:14,360
will write here 6. And what is our next

221
00:09:14,360 --> 00:09:16,160
element?That is nothing but four, right?

222
00:09:16,400 --> 00:09:18,160
So I will write here four, that is

223
00:09:18,160 --> 00:09:20,840
nothing but 10. So our sum will hold

224
00:09:20,840 --> 00:09:23,680
what our 10, right?And that is where we

225
00:09:23,680 --> 00:09:26,240
are going to get here sum is equal to 10

226
00:09:26,240 --> 00:09:28,800
and we will then push this out, right?So

227
00:09:28,800 --> 00:09:31,600
I'm going to. Here our push method and in

228
00:09:31,600 --> 00:09:33,920
this array it is going to have now 2

229
00:09:33,920 --> 00:09:36,800
comma 6 comma 10. OK that is what

230
00:09:36,800 --> 00:09:39,480
we are going to get here. OK now in the

231
00:09:39,480 --> 00:09:41,800
next iteration what will happen now?So

232
00:09:41,800 --> 00:09:43,520
let us come here and we are going to

233
00:09:43,520 --> 00:09:46,240
write here what I is equal to three. OK

234
00:09:46,480 --> 00:09:49,200
so three is less than four. Now this is

235
00:09:49,200 --> 00:09:51,240
also true right?So we will come here and

236
00:09:51,240 --> 00:09:53,520
we will write here T OK for true I am

237
00:09:53,520 --> 00:09:56,400
writing after that what is our sum value

238
00:09:56,400 --> 00:09:58,360
now it is nothing but 10 because it's

239
00:09:58,400 --> 00:10:01,160
updated right?So 10 plus we are

240
00:10:01,160 --> 00:10:02,960
going to write now what is our last

241
00:10:02,960 --> 00:10:05,040
element here that is 2. So I will write

242
00:10:05,040 --> 00:10:07,720
here what two and this is nothing but 12

243
00:10:07,720 --> 00:10:10,120
and what will be our sum value now. So

244
00:10:10,120 --> 00:10:12,520
sum will become your nothing but as what

245
00:10:12,520 --> 00:10:15,360
12 right?And then finally we are going

246
00:10:15,360 --> 00:10:17,280
to push it inside our resultant element.

247
00:10:18,220 --> 00:10:20,860
So we will have here what 2 comma 6

248
00:10:20,860 --> 00:10:23,820
comma 10 comma 12 right?So I

249
00:10:23,820 --> 00:10:26,380
will write here 10 comma 12. This will be

250
00:10:26,540 --> 00:10:29,500
our final resultant area. OK and that

251
00:10:29,500 --> 00:10:31,900
is what you are going to get it that as

252
00:10:31,900 --> 00:10:34,220
well. So this is what we will be

253
00:10:34,220 --> 00:10:36,380
achieving it after that. OK now

254
00:10:37,100 --> 00:10:39,820
after that what will happen?When I

255
00:10:39,820 --> 00:10:42,820
is equal to four. OK now we will test

256
00:10:42,820 --> 00:10:44,740
our condition because I have told you N

257
00:10:44,740 --> 00:10:47,260
number of times we are writing plus plus

258
00:10:47,260 --> 00:10:49,780
it is going to increment it. But when it

259
00:10:49,780 --> 00:10:51,700
tests the condition that time it

260
00:10:51,700 --> 00:10:54,620
terminates. OK so if you write your 4 is

261
00:10:54,620 --> 00:10:56,780
less than four right?And here you get

262
00:10:56,780 --> 00:10:59,500
your false right?And this is the place

263
00:10:59,500 --> 00:11:01,860
where your condition is going to fail.

264
00:11:02,300 --> 00:11:04,860
And the loop is going to terminate. OK,

265
00:11:05,100 --> 00:11:07,660
so final termination will happen and you

266
00:11:07,660 --> 00:11:10,540
will have in your resultant array this

267
00:11:10,540 --> 00:11:12,940
one and that is where after this we are

268
00:11:12,940 --> 00:11:15,820
going to print our resultant array. That

269
00:11:15,820 --> 00:11:17,660
is what I will take it here and we are

270
00:11:17,660 --> 00:11:19,820
going to put it over here. So finally

271
00:11:19,820 --> 00:11:22,540
then we will print our sum prefix. OK,

272
00:11:22,700 --> 00:11:24,460
now let us come down and we will

273
00:11:24,460 --> 00:11:26,860
implement the same approach inside our

274
00:11:26,860 --> 00:11:29,380
function also. OK, so I will write here

275
00:11:29,380 --> 00:11:31,260
what function and what will be our

276
00:11:31,260 --> 00:11:33,740
function name. Nothing but prefix sum

277
00:11:34,060 --> 00:11:36,860
and we will quickly invoke it. OK, so I

278
00:11:36,860 --> 00:11:39,460
will write here what prefix sum and I am

279
00:11:39,460 --> 00:11:42,140
going to pass our input array. So let us

280
00:11:42,140 --> 00:11:44,860
take it from above. So this is our input

281
00:11:44,860 --> 00:11:47,420
array and we will pass it over here. OK

282
00:11:47,820 --> 00:11:50,060
and let us receive it here as in params.

283
00:11:50,060 --> 00:11:52,700
So I will write here what arr OK and let

284
00:11:52,700 --> 00:11:55,100
us just console it out. So I will write

285
00:11:55,100 --> 00:11:57,900
here what console dot log of arr

286
00:11:57,900 --> 00:12:00,780
OK and. Let us come here and we

287
00:12:00,780 --> 00:12:03,460
will write here what node 72 challenge,

288
00:12:03,500 --> 00:12:05,660
right?And we will hit enter. What do we

289
00:12:05,660 --> 00:12:08,540
got?2 comma 4 comma 4 comma 2. That is

290
00:12:08,540 --> 00:12:10,900
nothing but our input array, right?So

291
00:12:10,900 --> 00:12:12,940
this function is properly running. OK,

292
00:12:13,260 --> 00:12:15,420
now let us come above and we will see our

293
00:12:15,420 --> 00:12:17,260
approach and accordingly we are going to

294
00:12:17,260 --> 00:12:19,820
do. So we are going to now create our two

295
00:12:19,820 --> 00:12:22,700
variables. OK, so I will write here what

296
00:12:22,700 --> 00:12:25,420
let sumprefix is equal to and we are

297
00:12:25,420 --> 00:12:27,580
going to initialize this with an empty

298
00:12:27,580 --> 00:12:30,020
array, correct?And then we willHere and

299
00:12:30,020 --> 00:12:32,380
we will write here what let sum is equal

300
00:12:32,380 --> 00:12:35,340
to 0 correct?After that we are going

301
00:12:35,340 --> 00:12:38,060
to write our I loop. OK, so we will

302
00:12:38,060 --> 00:12:40,300
come here and we will write here what for

303
00:12:40,300 --> 00:12:42,780
and then let I is equal to 0 correct

304
00:12:43,180 --> 00:12:44,380
and where it should end.

305
00:12:44,860 --> 00:12:47,580
arr.length-1 that is where we are going

306
00:12:47,580 --> 00:12:50,380
to write here what arr.length

307
00:12:50,460 --> 00:12:53,420
okay and then i++ we are going to

308
00:12:53,420 --> 00:12:55,980
write and in this I will show you by

309
00:12:55,980 --> 00:12:58,820
printing our i okay so I will write here

310
00:12:58,820 --> 00:13:01,580
what console.log of i okay now let us

311
00:13:01,580 --> 00:13:03,700
come here and I will write here what node

312
00:13:03,700 --> 00:13:06,180
day 72 challenge and we will hit enter

313
00:13:06,500 --> 00:13:09,500
what do you got 0 1 2 and 3 if you see we

314
00:13:09,500 --> 00:13:12,460
have written the same at i is equal to 4

315
00:13:12,460 --> 00:13:14,540
the loop is getting terminated so only

316
00:13:14,740 --> 00:13:16,940
this many iterations are going to happen.

317
00:13:16,940 --> 00:13:19,340
OK. That is what we have seen here. OK.

318
00:13:19,340 --> 00:13:21,540
Now I will just comment this out and we

319
00:13:21,540 --> 00:13:24,220
will come down and we will now start

320
00:13:24,220 --> 00:13:26,740
calculating our sum and accumulating it

321
00:13:26,740 --> 00:13:29,220
in our sum variable and after that we are

322
00:13:29,220 --> 00:13:31,660
going to push it as well. OK. So let us

323
00:13:31,660 --> 00:13:34,580
write here what sum plus is equal to

324
00:13:34,860 --> 00:13:37,420
arr of i. OK. And after that what we are

325
00:13:37,420 --> 00:13:39,420
going to do sumprefix.

326
00:13:41,180 --> 00:13:44,140
Push our sum. OK, I have written here

327
00:13:44,140 --> 00:13:46,180
and I will show you now what is the sum

328
00:13:46,180 --> 00:13:47,740
here. I will come here and I'll write

329
00:13:47,740 --> 00:13:50,460
here what console dot logsum. OK

330
00:13:50,780 --> 00:13:53,740
and let us write here our I also OK

331
00:13:53,740 --> 00:13:55,500
so that we can see here what we are

332
00:13:55,500 --> 00:13:57,860
getting. OK so I'll write here I comma

333
00:13:57,860 --> 00:13:59,500
sum. So we will come here and we will

334
00:13:59,500 --> 00:14:01,420
clear it up and I will write here what

335
00:14:01,420 --> 00:14:04,300
node 72 challenge and we will hit

336
00:14:04,380 --> 00:14:07,260
enter. So if you see at 0 the sum

337
00:14:07,260 --> 00:14:09,180
is what two right?That is what we have

338
00:14:09,180 --> 00:14:11,580
done. When it is one it is. Nothing but

339
00:14:11,580 --> 00:14:13,260
six. So that is where it is getting

340
00:14:13,260 --> 00:14:16,220
pushed 6 also. Then we have here 10, so

341
00:14:16,220 --> 00:14:18,860
you can see here 10. Then we have here

342
00:14:18,860 --> 00:14:21,500
12, right?And we are getting here 12. OK,

343
00:14:21,740 --> 00:14:23,940
so that is what we are able to get it. So

344
00:14:23,940 --> 00:14:26,300
after each iteration we are printing our

345
00:14:26,300 --> 00:14:28,620
sum right now in the terminal. OK, now

346
00:14:28,620 --> 00:14:30,740
let us come here and we have already

347
00:14:30,740 --> 00:14:33,020
pushed this. So we will come outside our

348
00:14:33,020 --> 00:14:35,420
loop and we are going to console our sum

349
00:14:35,420 --> 00:14:38,300
prefix. OK, so I will write here what sum

350
00:14:38,300 --> 00:14:40,060
prefix and we can just see in the

351
00:14:40,060 --> 00:14:42,780
terminal now. So let us clear it up and I

352
00:14:42,780 --> 00:14:45,020
will write here what node day 72

353
00:14:45,020 --> 00:14:47,620
challenge and we will hit enter. What do

354
00:14:47,620 --> 00:14:50,620
we got 2610 and 12. So same thing

355
00:14:50,620 --> 00:14:53,460
we have pushed it inside our resultant

356
00:14:53,460 --> 00:14:55,820
array that is nothing but our sum prefix

357
00:14:55,820 --> 00:14:57,980
and we are getting here the final output.

358
00:14:57,980 --> 00:15:00,140
OK now let us come here and we will

359
00:15:00,140 --> 00:15:02,780
improvise it. So sum prefix of a

360
00:15:02,780 --> 00:15:04,940
given array we will take up and we will

361
00:15:05,020 --> 00:15:07,340
pass it here inside our template

362
00:15:07,340 --> 00:15:09,740
literals, right?So let us come here and I

363
00:15:09,820 --> 00:15:11,820
will write here this template. literals

364
00:15:11,820 --> 00:15:13,820
and we will paste it here and we will put

365
00:15:13,820 --> 00:15:16,540
here comma okay and given array we will

366
00:15:16,540 --> 00:15:18,980
remove and I will write here what square

367
00:15:18,980 --> 00:15:21,900
bracket flower braces right

368
00:15:21,900 --> 00:15:24,380
and then we will write here what our arr

369
00:15:24,820 --> 00:15:27,020
Correct. And now we will make this P also

370
00:15:27,020 --> 00:15:29,780
capital. OK, now let us come here and we

371
00:15:29,780 --> 00:15:32,140
will just test it out, clear it up. Note

372
00:15:32,140 --> 00:15:34,940
day 72 challenge and we will hit enter.

373
00:15:35,220 --> 00:15:38,140
What do you got?See prefix of an array is

374
00:15:38,140 --> 00:15:40,700
this right?That is what is our output 2

375
00:15:40,700 --> 00:15:43,660
comma 6 comma 10 comma 12. OK now

376
00:15:43,660 --> 00:15:45,780
let us remove this console dot log

377
00:15:45,780 --> 00:15:47,900
statements OK which we used it for

378
00:15:47,900 --> 00:15:49,980
debugging purpose or commenting this

379
00:15:49,980 --> 00:15:52,300
console dot log commenting this console

380
00:15:52,300 --> 00:15:54,860
dot log right. And now let us come here

381
00:15:54,860 --> 00:15:57,020
and we will write here what clear it up

382
00:15:57,020 --> 00:15:59,900
node day 72 challenge and we will hit

383
00:15:59,900 --> 00:16:02,620
enter. You can see here prefix sum array

384
00:16:02,620 --> 00:16:05,420
of a. 2 comma 4 comma

385
00:16:05,420 --> 00:16:08,380
4 comma 2 is what 2, 6, 10 and 12. We

386
00:16:08,380 --> 00:16:11,100
can write here and also of an array is

387
00:16:11,100 --> 00:16:13,900
this. OK, now let us come here and we can

388
00:16:13,900 --> 00:16:16,220
just invoke it with another input. So I

389
00:16:16,220 --> 00:16:18,540
will just write here what 10 comma 20

390
00:16:18,540 --> 00:16:20,980
comma 30. OK, so I'll write here prefix

391
00:16:20,980 --> 00:16:23,540
sum and we will write here what 10 comma

392
00:16:23,540 --> 00:16:26,140
20 comma 30. Now what will be the output?

393
00:16:26,620 --> 00:16:29,020
10 comma 30 we will get and after that

394
00:16:29,020 --> 00:16:31,380
what we are going to get 60, right?Let us

395
00:16:31,380 --> 00:16:34,060
clear it up and see. Note 72

396
00:16:34,060 --> 00:16:36,900
challenge. Hit enter. See 1030 and

397
00:16:36,900 --> 00:16:39,580
60 right?You can test it out with

398
00:16:39,580 --> 00:16:41,540
different inputs. OK, you will get the

399
00:16:41,540 --> 00:16:44,380
exact output OK. Now let us

400
00:16:44,380 --> 00:16:46,540
come here and we will have a quick recap

401
00:16:46,540 --> 00:16:48,860
of this particular question. OK, So what

402
00:16:48,860 --> 00:16:51,020
we have to do, we have to write a GS

403
00:16:51,020 --> 00:16:53,180
function to calculate the prefix sum

404
00:16:53,180 --> 00:16:55,900
array of a given array, right?And here we

405
00:16:55,900 --> 00:16:58,700
had our sample input and output, right?We

406
00:16:58,700 --> 00:17:00,820
understood that we have to write a GS

407
00:17:00,820 --> 00:17:02,940
function. That is where we defined our

408
00:17:02,940 --> 00:17:05,500
function name as what prefix sum, right?

409
00:17:05,740 --> 00:17:08,340
And at line #8 we wrote the important

410
00:17:08,340 --> 00:17:10,220
chunk of this question, that is what we

411
00:17:10,220 --> 00:17:12,740
have to calculate the prefix sum array of

412
00:17:12,740 --> 00:17:15,500
a given number. We understood here from

413
00:17:15,500 --> 00:17:18,300
line #10 to 14 that how we can

414
00:17:18,300 --> 00:17:20,740
reach to our particular output, right?And

415
00:17:20,740 --> 00:17:22,780
that is where for that we wrote our

416
00:17:22,780 --> 00:17:25,660
approach also, right?So what is a prefix

417
00:17:25,660 --> 00:17:28,300
array?It is nothing but the array whose

418
00:17:28,300 --> 00:17:30,420
every element is the sum of all the

419
00:17:30,460 --> 00:17:32,940
elements of the original array up to the

420
00:17:32,940 --> 00:17:35,300
current index, right?So we are traveling

421
00:17:35,300 --> 00:17:37,340
from one index to another index, right?

422
00:17:37,340 --> 00:17:40,140
That is where we are going to use your

423
00:17:40,140 --> 00:17:42,940
loop, OK, and we used our I loop, correct?

424
00:17:43,220 --> 00:17:45,300
What was?the start point?It was 0, and

425
00:17:45,300 --> 00:17:47,260
what was the end?Nothing but

426
00:17:47,300 --> 00:17:50,300
arr.length -1, right?And then we

427
00:17:50,300 --> 00:17:52,300
came here and we wrote our loop, right?

428
00:17:52,540 --> 00:17:55,020
Now inside the loop what we had to do, we

429
00:17:55,020 --> 00:17:57,300
had to calculate the sum, then we have to

430
00:17:57,380 --> 00:17:59,260
accumulate, and then finally we have to

431
00:17:59,260 --> 00:18:02,220
push to our resultant array, right?That

432
00:18:02,220 --> 00:18:04,700
is where we defined here another two

433
00:18:04,700 --> 00:18:06,860
variables, right?That is nothing but sum

434
00:18:06,860 --> 00:18:09,180
prefix and we initialized with an empty

435
00:18:09,180 --> 00:18:11,620
array. Then we again declared here what's

436
00:18:11,620 --> 00:18:14,140
sum and we initialized with 0. Right

437
00:18:14,860 --> 00:18:16,860
then we came down and we wrote our

438
00:18:16,860 --> 00:18:19,500
operations right to calculate the sum and

439
00:18:19,500 --> 00:18:21,660
to push it to our resultant array by

440
00:18:21,660 --> 00:18:23,980
using a push method right?And then down

441
00:18:23,980 --> 00:18:26,300
we understood our iterations right?

442
00:18:26,620 --> 00:18:28,940
After the iterations are completed we are

443
00:18:28,940 --> 00:18:31,260
going to print it here our sum prefix

444
00:18:31,260 --> 00:18:32,980
right?And we also understood in the

445
00:18:33,220 --> 00:18:36,140
iteration that when I is equal to 4A loop

446
00:18:36,140 --> 00:18:37,660
is going to terminate because the

447
00:18:37,660 --> 00:18:40,540
condition fails. Hence that is the end

448
00:18:40,540 --> 00:18:42,780
of the loop and finally we will get our

449
00:18:43,100 --> 00:18:45,380
sum prefix. That is nothing but our

450
00:18:45,380 --> 00:18:47,740
resultant array, right?Then the same

451
00:18:47,740 --> 00:18:49,900
thing we wrote inside our function also

452
00:18:49,900 --> 00:18:52,140
and we defined here function as what?

453
00:18:52,460 --> 00:18:54,740
Prefix sum and we were receiving here as

454
00:18:54,740 --> 00:18:57,420
an arr, right?And then we just tested

455
00:18:57,420 --> 00:18:59,380
out our function by writing

456
00:18:59,380 --> 00:19:01,980
console.log that we were

457
00:19:02,060 --> 00:19:04,140
passing it from here and we are receiving

458
00:19:04,140 --> 00:19:06,620
it here or not, right?Then we declared

459
00:19:06,620 --> 00:19:08,620
here our two variables, that is sum

460
00:19:08,620 --> 00:19:10,780
prefix is equal to empty array, sum is

461
00:19:10,780 --> 00:19:13,580
equal to zero. Then we wrote our i loop

462
00:19:13,580 --> 00:19:16,140
andAnd then we did our calculations

463
00:19:16,300 --> 00:19:18,580
that is for the addition and then we used

464
00:19:18,580 --> 00:19:20,780
a push method to push it to our resultant

465
00:19:20,780 --> 00:19:23,740
array, right?Then at line number 49, we

466
00:19:23,740 --> 00:19:26,140
came here and we printed our sum prefix

467
00:19:26,140 --> 00:19:27,820
also and we improvised our

468
00:19:28,220 --> 00:19:31,020
console.log statement also, right?And at

469
00:19:31,020 --> 00:19:33,820
line number 51 and 52, we invoked it with

470
00:19:33,820 --> 00:19:36,180
different inputs, right?And we tested in

471
00:19:36,180 --> 00:19:38,700
the terminal, okay?You can invoke it one

472
00:19:38,700 --> 00:19:40,860
more time and I will just write here what

473
00:19:40,860 --> 00:19:43,700
prefix sum and we will pass here one

474
00:19:43,780 --> 00:19:45,900
Comma one comma one. OK, let us see what

475
00:19:45,900 --> 00:19:48,340
do we get. OK, so we will come here and

476
00:19:48,340 --> 00:19:50,060
we will clear it up and we will write

477
00:19:50,060 --> 00:19:52,780
here what node day 72 challenge and we

478
00:19:52,780 --> 00:19:54,620
will hit enter. If you see we are getting

479
00:19:54,620 --> 00:19:57,180
here what?One, two, three, four, right?

480
00:19:57,180 --> 00:19:59,420
That is nothing but if you add it, it is

481
00:19:59,420 --> 00:20:01,460
going to give you one, two and three and

482
00:20:01,460 --> 00:20:04,380
four. That is what is our resultant area,

483
00:20:04,380 --> 00:20:06,860
right?Now I will tell you guys why this

484
00:20:06,860 --> 00:20:09,180
challenge is useful. This prefix sum

485
00:20:09,180 --> 00:20:11,420
technique is widely used in various

486
00:20:11,420 --> 00:20:13,820
computational problems, including range

487
00:20:13,820 --> 00:20:16,660
queries, cumulative calculations and

488
00:20:16,660 --> 00:20:19,500
dynamic programming. This challenge helps

489
00:20:19,500 --> 00:20:21,420
us to understand the logic and the

490
00:20:21,420 --> 00:20:23,580
practice of the implementation of

491
00:20:23,620 --> 00:20:25,980
cumulative sums efficiently. OK.
